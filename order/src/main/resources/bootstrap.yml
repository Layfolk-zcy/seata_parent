server:
  port: 7092
spring:
  application:
    name: order
  main:
    allow-bean-definition-overriding: true #支持多次覆盖注册bean
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1
      enabled: true
      file-size-threshold: 0
  # >>>>>>>>>>>>>>>>>>druid 的配置开始<<<<<<<<<<<<<<<<<<<<
  datasource:
    #mysql数据源驱动
    driver-class-name: com.mysql.cj.jdbc.Driver
    #oracle数据源驱动
    #driver-class-name: oracle.jdbc.driver.OracleDriver
    type: com.alibaba.druid.pool.DruidDataSource  #修改数据源为Druid
    druid:
      master:
        #url: jdbc:oracle:thin:@172.1.1.75:1521:XE
        #url: jdbc:oracle:thin:@172.1.0.71:1521:XE
        url: jdbc:mysql://127.0.0.1:3306/seata_order?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
        username: root
        password: root
      slave:
        enable: true
        #url: jdbc:oracle:thin:@172.1.1.75:1521:XE
        #url: jdbc:oracle:thin:@172.1.0.71:1521:XE
        url: jdbc:mysql://127.0.0.1:3306/seata_order?autoReconnect=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
        username: root
        password: root
      initialSize: 5  #修改Druid的默认连接配置
      minIdle: 5   # 最小连接池数量
      maxActive: 20   # 最大连接池数量
      maxWait: 60000   # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000  # 配置一个连接在池中最小生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000  # 配置一个连接在池中最大生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      # 建议配置为true，不影响性能，并且保证安全性。
      testWhileIdle: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      #PSCache 最大连接数量
      maxPoolPreparedStatementPerConnectionSize: 20
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      #是否开启配置监控统计拦截的filters
      isonfilters: false
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      #开启监控功能
      stat-view-servlet:
        enabled: true
      web-stat-filter:
        enabled: true
      filter:
        config:
          enabled: true
  cloud:
    nacos:
      discovery:
        #命名空间
        namespace: b8c496f3-6cd8-4891-b02f-1470ee95b4a4
        #注册中心地址
        server-addr: http://127.0.0.1:8848
        username: nacos
        password: nacos
        group: My_SEATA_GROUP

seata:
  # seata服务端的配置
  config:
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      group: My_SEATA_GROUP
      namespace: 586e8800-c3cb-4c74-82cc-d0a929162b7d
      dataId: "seataServer.properties" # 指定dataId
      username: "nacos"
      password: "nacos"
  service:
    vgroup-mapping:
      my_tx_group: myDefault  # 指定事务分组至集群映射关系，即映射到哪一个seata-server集群上，需与server端注册到Nacos的cluster保持一致
  registry:
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848 # nacos地址
      application: seata-server #registry.config中配置的nacos注册时application项对应的值
      group: My_SEATA_GROUP #registry.config中配置的nacos注册时group项对应的值
      namespace: b8c496f3-6cd8-4891-b02f-1470ee95b4a4 # registry.config中配置的nacos注册时namespace项对应的值
      password: nacos # nacos登录用户对应密码
      cluster: myDefault  # registry.config中配置的nacos注册时cluster项对应的值
      username: nacos #nacos登录用户名
  enable-auto-data-source-proxy: true
  tx-service-group: my_tx_group # 该值与vgroup-mapping的下一项数据名相同